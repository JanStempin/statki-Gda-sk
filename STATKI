### próba rozwiązania kodu do statków na podstawie klas i list###
import random
import os
from tkinter import *
from tkinter import messagebox

class statek:
    ile_masztow = 0
    pola_masztow = []
    pola_styczne = [] #### pola styczne do okrętów, tak żeby nie można było stawiac okrętów stycznie do siebie ####
    zycia = 0
    def ilomasztowiec(self):
        self.ile_masztow = int(input("podaj ilomasztowy okręt stawiasz: "))
    def wyznaczanie_pol (self, kukuryku):
        self.pola_masztow = []
        for i in range(1,self.ile_masztow+1):
            while True:
                pojedyncze_pole =[]
                for i in range(1,3):
                    pojedyncze_pole.append(int(input("podaj współrzędną pola")))
                if pojedyncze_pole in kukuryku:
                    True
                    print("podałeś już nieaktywne pole!")
                else:
                    break
            self.pola_masztow.append(pojedyncze_pole)
            #### tutaj dodajemy przyciski z planszy 10x10 pól w GUI, tak żeby jedna współrzędna była x a druga y ####
    def zycia_statku(self):
        self.zycia = self.ile_masztow
    def wyz_pola_styczne(self):
        self.pola_styczne = self.pola_masztow
        #### dodajmy po każdej współrzędnej nieaktywne pola na których nie można już umieścić statków ####
        pola = self.pola_masztow
        ciag_pol = []
        ciag_pol2 = []
        ####
        k = 0
        if pola[0][0] == pola [1][0]:
            #### sprawdzamy czy statek jest w układzie wertykalnym czy horyzontalnym ####
            for i in pola:
                ciag_pol.append(pola[k][1])
                k+=1
            malo = min(ciag_pol)
            duzo = max(ciag_pol)
            for i in range(pola[0][0] - 1, pola[0][0]+2):
                dodatek = []
                for j in range(malo-1, duzo+2):
                    dodatek.append([i,j])
                ciag_pol2.extend(dodatek)
        elif pola[0][1] == pola[1][1]:
            #### sprawdzamy czy statek jest w układzie wertykalnym czy horyzontalnym ####
            for i in pola:
                ciag_pol.append(pola[k][0])
                k+=1
            malo = min(ciag_pol)
            duzo = max(ciag_pol)
            for i in range(pola[0][1] - 1, pola[0][1]+2):
                dodatek = []
                for j in range(malo-1, duzo+2):
                    dodatek.append([j,i])
                ciag_pol2.extend(dodatek)
        self.pola_styczne = ciag_pol2

#### definiowanie listy dla pól zapełnionych####
kukuryku = []

#### usaewiamy 5 statków: 1 x 5masztów, 1 x 4 maszty, 2 x 3 maszty, 2 x 2 maszty #####
moj_statek5 = statek()
moj_statek4 = statek()
moj_statek3 = statek()
moj_statek3_1 = statek()
moj_statek2 = statek()
moj_statek2_1 = statek()

moj_statek5.ilomasztowiec()
moj_statek5.wyznaczanie_pol(kukuryku)
moj_statek5.wyz_pola_styczne()
kukuryku.extend(moj_statek5.pola_styczne)

moj_statek4.ilomasztowiec()
moj_statek4.wyznaczanie_pol(kukuryku)
moj_statek4.wyz_pola_styczne()
kukuryku.extend(moj_statek4.pola_styczne)

moj_statek3.ilomasztowiec()
moj_statek3.wyznaczanie_pol(kukuryku)
moj_statek3.wyz_pola_styczne()
kukuryku.extend(moj_statek3.pola_styczne)

moj_statek3_1.ilomasztowiec()
moj_statek3_1.wyznaczanie_pol(kukuryku)
moj_statek3_1.wyz_pola_styczne()
kukuryku.extend(moj_statek3_1.pola_styczne)

moj_statek2.ilomasztowiec()
moj_statek2.wyznaczanie_pol(kukuryku)
moj_statek2.wyz_pola_styczne()
kukuryku.extend(moj_statek2.pola_styczne)

moj_statek2_1.ilomasztowiec()
moj_statek2_1.wyznaczanie_pol(kukuryku)
moj_statek2_1.wyz_pola_styczne()
kukuryku.extend(moj_statek2_1.pola_styczne)


#### pokazuje pola statku ####
print(moj_statek5.pola_masztow)
print(moj_statek4.pola_masztow)
print(moj_statek3.pola_masztow)
print(moj_statek3_1.pola_masztow)
print(moj_statek2.pola_masztow)
print(moj_statek2_1.pola_masztow)

##### pokazuje pozcje pól nieaktywnych #####
print(kukuryku)

#### losowanie statków komputer ####
import random
#### losujemy pola statków dla komputera ####
statki = [5,4,3,3,2,2]
p_statki = []
pola_nieaktywne = []
pola_statku = []
pola_wszystkich = []
for i in range(len(statki)):
    ilemaszt = statki[i]
    print("to jest ", ilemaszt, "masztowiec")
    print("podejście")
    while True:
        pole_startowe = []
        x = random.randint(1,10)
        y = random.randint(1,10)
        pole_startowe = [x,y]
        print(pole_startowe)
        if pole_startowe in pola_nieaktywne:
            True
            print("sorry, wybrane pole jest już w liście")
        else:
            czy_wpada = 0
            pion_poziom = random.randint(1,2)
            print(pion_poziom)
            pola_statku = []
            k = 0
            ciag_pol_k = []
            pola_obok=[]
            if pion_poziom ==1:
                print("wylosowano pion")
                for j in range(1,ilemaszt+1):
                    pola_statku.append([x,y+k])
                    ####k+=1#####
                    if y+k > 10:
                        czy_wpada +=1
                    else: 
                        czy_wpada+=0
                    k+=1
                ks = 0
                for s in pola_statku: 
                    ciag_pol_k.append(pola_statku[ks][1])
                    ks+=1
                min_k = min(ciag_pol_k)
                print(min_k)
                max_k = max(ciag_pol_k)
                print(max_k)
                for i in range(min_k - 1, max_k + 2):
                    for j in range(pola_statku[0][0] - 1, pola_statku[0][0]+2):
                        pola_obok.append([j,i])
            else: 
                print("wylosowano poziom")
                for j in range(1,ilemaszt+1):
                    pola_statku.append([x+k,y])
                    ####k+=1#####
                    if x+k > 10:
                        czy_wpada +=1
                    else: 
                        czy_wpada+=0
                    k+=1
                ks = 0
                for s in pola_statku: 
                    ciag_pol_k.append(pola_statku[ks][0])
                    ks+=1
                min_k = min(ciag_pol_k)
                print(min_k)
                max_k = max(ciag_pol_k)
                print(max_k)
                for i in range(pola_statku[0][1] - 1, pola_statku[0][1]+2):
                    for j in range(min_k - 1, max_k + 2):
                        pola_obok.append([j,i])
            for k in pola_statku:
                if k in pola_nieaktywne:
                    czy_wpada +=1
                else:
                    czy_wpada+=0
            if czy_wpada >0:
                True
            else:
                pola_nieaktywne.extend(pola_obok)
                p_statki.append(pola_statku)
                break
print("pikobelo")
print("pola już nieaktywne: ",pola_nieaktywne)
print("pola statku: ", p_statki)

print(len(p_statki[0]))

import random
import os
#### Strzelanie i rozstrzyganie gry ####

komp = [[[1, 6], [2, 6], [3, 6], [4, 6], [5, 6]], [[9, 2], [9, 3], [9, 4], [9, 5]], [[3, 1], [4, 1], [5, 1]], [[2, 3], [3, 3], [4, 3]], [[3, 9], [4, 9]], [[8, 10], [9, 10]]]
ast = [[[1, 6], [2, 6], [3, 6], [4, 6], [5, 6]], [[9, 2], [9, 3], [9, 4], [9, 5]], [[3, 1], [4, 1], [5, 1]], [[2, 3], [3, 3], [4, 3]], [[3, 9], [4, 9]], [[8, 10], [9, 10]]]

#### te listy do zastapienia ####

print(len(ast))


##### lista żeby komputer nie powtarzał już strzelanych pól ####
juz_strzelane = []
while True:
    czy_przerwac_gracz = 0
    czy_przerwac_komputer = 0
    if len(ast[0]) == 0:
        czy_przerwac_gracz+=1
    if len(ast[1]) == 0:
        czy_przerwac_gracz+=1
    if len(ast[2]) == 0:
        czy_przerwac_gracz+=1
    if len(ast[3]) == 0:
        czy_przerwac_gracz+=1
    if len(ast[4]) == 0:
        czy_przerwac_gracz+=1
    if len(ast[5]) == 0:
        czy_przerwac_gracz+=1
    if len(komp[0]) == 0:
        czy_przerwac_komputer+=1
    if len(komp[0]) == 0:
        czy_przerwac_komputer+=1
    if len(komp[1]) == 0:
        czy_przerwac_komputer+=1
    if len(komp[2]) == 0:
        czy_przerwac_gracz+=1
    if len(komp[3]) == 0:
        czy_przerwac_komputer+=1
    if len(komp[4]) == 0:
        czy_przerwac_komputer+=1
    if len(komp[5]) == 0:
        czy_przerwac_komputer+=1
    if czy_przerwac_gracz == 5:
        break
    if czy_przerwac_komputer == 5:
        break
    else:
        x_s = int(input("podaj wsp x do strzlu: "))
        y_s = int(input("podaj wsp y do strzlu: "))
        os.system("cls")
        strzal = [x_s, y_s]
        if strzal in ast[0]:
            print("TAK")
            ast[0].remove(strzal)
            if len(ast[0]) == 0:
                print("statek poszedł na dno!")
 
        elif strzal in ast[1]:
            print("TAK")
            ast[1].remove(strzal)
            if len(ast[1]) == 0:
                print("statek poszedł na dno!")

        elif strzal in ast[2]:
            print("TAK")
            ast[2].remove(strzal)
            if len(ast[2]) == 0:
                print("statek poszedł na dno!")

        elif strzal in ast[3]:
            print("TAK")
            ast[3].remove(strzal)
            if len(ast[3]) == 0:
                print("statek poszedł na dno!")
 
        elif strzal in ast[4]:
            print("TAK")
            ast[4].remove(strzal)
            if len(ast[4]) == 0:
                print("statek poszedł na dno!")
  
        elif strzal in ast[5]:
            print("TAK")
            ast[5].remove(strzal)
            if len(ast[5]) == 0:
                print("statek poszedł na dno!")
   
        else:
            print("pudło!")

        print("teaz strzela komputer!!!!!!!!!!!!!!!!!!!!!")

        while True:
            x_komp = random.randint(1,10)
            y_komp = random.randint(1,10)
            strzal_komputera = [x_komp,y_komp]
            print(strzal_komputera)
            if strzal_komputera in juz_strzelane:
                True
            else:
                juz_strzelane.append(strzal_komputera)
                break
        print(juz_strzelane)
        if strzal_komputera in komp[0]:
            print("Trafiony!")
            komp[0].remove(strzal_komputera)
            if len(komp[0]) == 0:
                print("statek poszedł na dno!")
    
        elif strzal_komputera in komp[1]:
            print("Trafiony!")
            komp[1].remove(strzal_komputera)
            if len(komp[1]) == 0:
                print("statek poszedł na dno!")
   
        elif strzal_komputera in komp[2]:
            print("Trafiony!")
            komp[2].remove(strzal_komputera)
            if len(komp[2]) == 0:
                print("statek poszedł na dno!")

        elif strzal_komputera in komp[3]:
            print("Trafiony!")
            komp[3].remove(strzal_komputera)
            if len(komp[3]) == 0:
                print("statek poszedł na dno!")
    
        elif strzal_komputera in komp[4]:
            print("Trafiony!")
            komp[4].remove(strzal_komputera)
            if len(komp[4]) == 0:
                print("statek poszedł na dno!")
 
        elif strzal_komputera in komp[5]:
            print("Trafiony!")
            komp[5].remove(strzal_komputera)
            if len(komp[5]) == 0:
                print("statek poszedł na dno!")
   
        else:
            print("pudło!")
    
if czy_przerwac_gracz == 5:
    print("wygrał komputer!")
elif czy_przerwac_komputer == 5:
    print("wygrałeś!")






####plansza#####

from tkinter import *
def klik():
    if wartosc.get()==2:
        wybrane_pole=[1,2]
        print(wybrane_pole)
    if wartosc.get()==3:
        wybrane_pole=[1,3]
        print(wybrane_pole)
    if wartosc.get()==4:
        wybrane_pole=[1,4]
        print(wybrane_pole)
    if wartosc.get()==5:
        wybrane_pole=[1,5]
        print(wybrane_pole)
    if wartosc.get()==6:
        wybrane_pole=[1,6]
        print(wybrane_pole)
    if wartosc.get()==7:
        wybrane_pole=[1,7]
        print(wybrane_pole)
    if wartosc.get()==8:
        wybrane_pole=[1,8]
        print(wybrane_pole)
    if wartosc.get()==9:
        wybrane_pole=[1,9]
        print(wybrane_pole)
    if wartosc.get()==10:
        wybrane_pole=[1,10]
        print(wybrane_pole)
    if wartosc.get()==11:
        wybrane_pole=[2,1]
        print(wybrane_pole)
    if wartosc.get()==12:
        wybrane_pole=[2,2]
        print(wybrane_pole)
    if wartosc.get()==13:
        wybrane_pole=[2,3]
        print(wybrane_pole)
    if wartosc.get()==14:
        wybrane_pole=[2,4]
        print(wybrane_pole)
    if wartosc.get()==15:
        wybrane_pole=[2,5]
        print(wybrane_pole)
    if wartosc.get()==16:
        wybrane_pole=[2,6]
        print(wybrane_pole)
    if wartosc.get()==17:
        wybrane_pole=[2,7]
        print(wybrane_pole)
    if wartosc.get()==18:
        wybrane_pole=[2,8]
        print(wybrane_pole)
    if wartosc.get()==19:
        wybrane_pole=[2,9]
        print(wybrane_pole)
    if wartosc.get()==20:
        wybrane_pole=[2,10]
        print(wybrane_pole)
    if wartosc.get()==21:
        wybrane_pole=[3,1]
        print(wybrane_pole)
    if wartosc.get()==22:
        wybrane_pole=[3,2]
        print(wybrane_pole)
    if wartosc.get()==23:
        wybrane_pole=[3,3]
        print(wybrane_pole)
    if wartosc.get()==24:
        wybrane_pole=[3,4]
        print(wybrane_pole)
    if wartosc.get()==25:
        wybrane_pole=[3,5]
        print(wybrane_pole)
    if wartosc.get()==26:
        wybrane_pole=[3,6]
        print(wybrane_pole)
    if wartosc.get()==27:
        wybrane_pole=[3,7]
        print(wybrane_pole)
    if wartosc.get()==28:
        wybrane_pole=[3,8]
        print(wybrane_pole)
    if wartosc.get()==29:
        wybrane_pole=[3,9]
        print(wybrane_pole)
    if wartosc.get()==30:
        wybrane_pole=[3,10]
        print(wybrane_pole)
    if wartosc.get()==31:
        wybrane_pole=[4,1]
        print(wybrane_pole)
    if wartosc.get()==32:
        wybrane_pole=[4,2]
        print(wybrane_pole)
    if wartosc.get()==33:
        wybrane_pole=[4,3]
        print(wybrane_pole)
    if wartosc.get()==34:
        wybrane_pole=[4,4]
        print(wybrane_pole)
    if wartosc.get()==35:
        wybrane_pole=[4,5]
        print(wybrane_pole)
    if wartosc.get()==36:
        wybrane_pole=[4,6]
        print(wybrane_pole)
    if wartosc.get()==37:
        wybrane_pole=[4,7]
        print(wybrane_pole)
    if wartosc.get()==38:
        wybrane_pole=[4,8]
        print(wybrane_pole)
    if wartosc.get()==39:
        wybrane_pole=[4,9]
        print(wybrane_pole)
    if wartosc.get()==40:
        wybrane_pole=[4,10]
        print(wybrane_pole)
    if wartosc.get()==41:
        wybrane_pole=[5,1]
        print(wybrane_pole)
    if wartosc.get()==42:
        wybrane_pole=[5,2]
        print(wybrane_pole)
    if wartosc.get()==43:
        wybrane_pole=[5,3]
        print(wybrane_pole)
    if wartosc.get()==44:
        wybrane_pole=[5,4]
        print(wybrane_pole)
    if wartosc.get()==45:
        wybrane_pole=[5,5]
        print(wybrane_pole)
    if wartosc.get()==46:
        wybrane_pole=[5,6]
        print(wybrane_pole)
    if wartosc.get()==47:
        wybrane_pole=[5,7]
        print(wybrane_pole)
    if wartosc.get()==48:
        wybrane_pole=[5,8]
        print(wybrane_pole)
    if wartosc.get()==49:
        wybrane_pole=[5,9]
        print(wybrane_pole)
    if wartosc.get()==50:
        wybrane_pole=[5,10]
        print(wybrane_pole)
    if wartosc.get()==51:
        wybrane_pole=[6,1]
        print(wybrane_pole)
    if wartosc.get()==52:
        wybrane_pole=[6,2]
        print(wybrane_pole)
    if wartosc.get()==53:
        wybrane_pole=[6,3]
        print(wybrane_pole)
    if wartosc.get()==54:
        wybrane_pole=[6,4]
        print(wybrane_pole)
    if wartosc.get()==55:
        wybrane_pole=[6,5]
        print(wybrane_pole)
    if wartosc.get()==56:
        wybrane_pole=[6,6]
        print(wybrane_pole)
    if wartosc.get()==57:
        wybrane_pole=[6,7]
        print(wybrane_pole)
    if wartosc.get()==58:
        wybrane_pole=[6,8]
        print(wybrane_pole)
    if wartosc.get()==59:
        wybrane_pole=[6,9]
        print(wybrane_pole)
    if wartosc.get()==60:
        wybrane_pole=[6,10]
        print(wybrane_pole)
    if wartosc.get()==61:
        wybrane_pole=[7,1]
        print(wybrane_pole)
    if wartosc.get()==62:
        wybrane_pole=[7,2]
        print(wybrane_pole)
    if wartosc.get()==63:
        wybrane_pole=[7,3]
        print(wybrane_pole)
    if wartosc.get()==64:
        wybrane_pole=[7,4]
        print(wybrane_pole)
    if wartosc.get()==65:
        wybrane_pole=[7,5]
        print(wybrane_pole)
    if wartosc.get()==66:
        wybrane_pole=[7,6]
        print(wybrane_pole)
    if wartosc.get()==67:
        wybrane_pole=[7,7]
        print(wybrane_pole)
    if wartosc.get()==68:
        wybrane_pole=[7,8]
        print(wybrane_pole)
    if wartosc.get()==69:
        wybrane_pole=[7,9]
        print(wybrane_pole)
    if wartosc.get()==70:
        wybrane_pole=[7,10]
        print(wybrane_pole)
    if wartosc.get()==71:
        wybrane_pole=[8,1]
        print(wybrane_pole)
    if wartosc.get()==72:
        wybrane_pole=[8,2]
        print(wybrane_pole)
    if wartosc.get()==73:
        wybrane_pole=[8,3]
        print(wybrane_pole)
    if wartosc.get()==74:
        wybrane_pole=[8,4]
        print(wybrane_pole)
    if wartosc.get()==75:
        wybrane_pole=[8,5]
        print(wybrane_pole)
    if wartosc.get()==76:
        wybrane_pole=[8,6]
        print(wybrane_pole)
    if wartosc.get()==77:
        wybrane_pole=[8,7]
        print(wybrane_pole)
    if wartosc.get()==78:
        wybrane_pole=[8,8]
        print(wybrane_pole)
    if wartosc.get()==79:
        wybrane_pole=[8,9]
        print(wybrane_pole)
    if wartosc.get()==80:
        wybrane_pole=[8,10]
        print(wybrane_pole)
    if wartosc.get()==81:
        wybrane_pole=[9,1]
        print(wybrane_pole)
    if wartosc.get()==82:
        wybrane_pole=[9,2]
        print(wybrane_pole)
    if wartosc.get()==83:
        wybrane_pole=[9,3]
        print(wybrane_pole)
    if wartosc.get()==84:
        wybrane_pole=[9,4]
        print(wybrane_pole)
    if wartosc.get()==85:
        wybrane_pole=[9,5]
        print(wybrane_pole)
    if wartosc.get()==86:
        wybrane_pole=[9,6]
        print(wybrane_pole)
    if wartosc.get()==87:
        wybrane_pole=[9,7]
        print(wybrane_pole)
    if wartosc.get()==88:
        wybrane_pole=[9,8]
        print(wybrane_pole)
    if wartosc.get()==89:
        wybrane_pole=[9,9]
        print(wybrane_pole)
    if wartosc.get()==90:
        wybrane_pole=[9,10]
        print(wybrane_pole)
    if wartosc.get()==91:
        wybrane_pole=[10,1]
        print(wybrane_pole)
    if wartosc.get()==92:
        wybrane_pole=[10,2]
        print(wybrane_pole)
    if wartosc.get()==93:
        wybrane_pole=[10,3]
        print(wybrane_pole)
    if wartosc.get()==94:
        wybrane_pole=[10,4]
        print(wybrane_pole)
    if wartosc.get()==95:
        wybrane_pole=[10,5]
        print(wybrane_pole)
    if wartosc.get()==96:
        wybrane_pole=[10,6]
        print(wybrane_pole)
    if wartosc.get()==97:
        wybrane_pole=[10,7]
        print(wybrane_pole)
    if wartosc.get()==98:
        wybrane_pole=[10,8]
        print(wybrane_pole)
    if wartosc.get()==99:
        wybrane_pole=[10,9]
        print(wybrane_pole)
    if wartosc.get()==100:
        wybrane_pole=[10,10]
        print(wybrane_pole)

glowneOkno = Tk()
glowneOkno.geometry("1005x450")
wartosc=IntVar()
trafione = [1, 2], [3, 4]
litery = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J"]
cyfry = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]
y = 0
for i in range(1, 11):
    literka = litery[i - 1]
    for j in range(1, 11):
        cyferka = cyfry[j - 1]
        czy_trafiony = [i,j]
        y += 1
        if czy_trafiony in trafione:
            pola = literka, cyferka
            przycisk = Radiobutton(glowneOkno, text=pola, fg="blue", background = "pink", height = 2, width=5)
            przycisk.grid(row=i, column=j)
        else:
            pierwsza = i
            druga = j
            pola = literka, cyferka
            przycisk = Radiobutton(glowneOkno, text=pola, fg="magenta", background = "pink", height = 2, width=5, value = y, variable=wartosc)
            przycisk.grid(row=i, column=j)


przycisk_sprawdzacz=Button(glowneOkno, text="Zatwierdź", command= klik)
przycisk_sprawdzacz.grid(row=11, column=5)
glowneOkno.mainloop()
